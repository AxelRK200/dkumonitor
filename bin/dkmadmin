#!/usr/bin/env bash
SCRIPT_DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )"
source ${SCRIPT_DIR}/env-default
source ${SCRIPT_DIR}/env-site
export DKUMONITOR_ROOT
export DKUMONITOR_HOME
source "${DKUMONITOR_HOME}/pyenv/bin/activate"

Usage() {
  cat <<EOF
Usage: $DKUMONITOR_HOME/bin/dkmadmin COMMAND [OPTIONS ...]"

install-boot [-name instance_name]
EOF

}

log() {
  current_time=$(date "+%Y-%m-%d %H:%M:%S")
  printf "[+] %s - %s\n" "$current_time" "$@" >> $DKUMONITOR_HOME/run/install.log
  printf "[+] %s - %s\n" "$current_time" "$@"
}

log_error() {
  current_time=$(date "+%Y-%m-%d %H:%M:%S")
  printf "[-] %s - %s\n" "$current_time" "$@" >> $DKUMONITOR_HOME/run/install.log
  printf "[-] %s - %s\n" "$current_time" "$@"
}

exec_logged() {
  echo "+" "$@" >> "$DKUMONITOR_HOME/run/install.log"
  "$@" 2>> "$DKUMONITOR_HOME/run/install.log" >> "$DKUMONITOR_HOME/run/install.log" # '&>>' syntax fails on MacOS
}

install_boot() {
  name="$1"
  service_name="dkumonitor"
  user="$2"
  if [ ! -z "$name" ]; then
    service_name="dkumonitor.$name"
  fi

  log "Check we have credentials to install a boot service"
  if [[ $(id -u) != 0 ]]; then
    echo >&2 "[-] Error: install-boot must be ran as root"
    echo >&2 ""
    exit 1
  fi

  systemd_pid=$(pidof systemd || echo "0")
  if [ $systemd_pid -eq 1 ]; then
    log "Generates the systemd service file"
    exec_logged python <(cat <<EOF
from jinja2 import Template, Environment, FileSystemLoader
service_name = "$service_name"
data = {
  "dkumonitor_user": "$user",
  "dkumonitor_home": "$DKUMONITOR_HOME",
}
jinja_env = Environment(loader=FileSystemLoader("$DKUMONITOR_ROOT/templates"))
jinja_env.get_template("dkumonitor.service.j2").stream(data).dump("/usr/lib/systemd/system/{}.service".format(service_name))
EOF
)
    log "Enable systemd service"
    exec_logged systemctl enable "${service_name}"
  else
    sysvinit_pid=$(pidof /sbin/init || echo "0")
    if [ $sysvinit_pid -eq 1 ]; then
      log "Generates the initd file"
      exec_logged python <(cat <<EOF
from jinja2 import Template, Environment, FileSystemLoader
service_name = "$service_name"
data = {
  "dkumonitor_user": "$user",
  "dkumonitor_home": "$DKUMONITOR_HOME",
}
jinja_env = Environment(loader=FileSystemLoader("$DKUMONITOR_ROOT/templates"))
jinja_env.get_template("dkumonitor.initd.j2").stream(data).dump("/etc/init.d/{}".format(service_name))
EOF
)
      log "Enable systemd service"
      chmod 755 "/etc/init.d/${service_name}"
    else
      log_error "Cannot find which init system your system uses."
      exit 1
    fi
  fi

  log "Done"
}

action=
instance_name=
while [ $# -gt 0 ]
do
  case "$1" in
    install-boot)
      action="$1"
      ;;
    -name)
      instance_name="$2"
      shift
      ;;
    -h|--help)
      Usage
      exit 0
      ;;
     *)
      echo "Unknown option $1"
      echo ""
      Usage
      exit 1
      ;;
  esac
  shift
done

if [[ "${action}" == "install-boot" ]]; then
  install_boot "${instance_name}" $(stat -c "%U" "$DKUMONITOR_HOME")
fi
